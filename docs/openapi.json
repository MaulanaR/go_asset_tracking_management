{
  "openapi": "3.0.3",
  "info": {
    "title": "Asset Tracking Management",
    "description": "The Asset Tracking Management allows you to perform all the operations that you do with our applications. Asset Tracking Management is built using REST principles which ensures predictable URLs, uses standard HTTP response codes, authentication, and verbs that makes writing applications easy.\n\n## Query Params\n\nAsset Tracking Management support a common way for pagination, sorting, filtering, searching and other using URL query params on `GET` method.\n\n### Pagination\n\nYou can use the following query parameters for pagination :\n\n* `$page`: used to specify the page number to retrieve, default = 1.\n* `$per_page`: used to specify the number of items to retrieve per page, default = 10.\n* `$is_disable_pagination`: used to disable pagination and retrieve all items in one request, default = false.\nExample :\n```\nGET /contacts?$page=3\u0026$per_page=10\n```\n\n### Sorting\n\nYou can use the `$sort` query parameter for sorting.\n\n* Use the field name according to what you want to sort.\n* Use dot notation to sort by the field of the object.\n* You can specify multiple fields separated by commas.\n* Add `-` (minus sign) before the field name to sort in descending order.\n* Add `:i` after the field name to sort case-insensitively.\n\nThis is example if you want to retrieve product data sort by category name, then quantity on hand descending, then case-insensitive name descending :\n```\nGET /products?$sort=category.name,-quantity.on_hand,-name:i\n```\n\n### Filtering\n\nYou can use the field name for filtering the result set based on one or more conditions.\n\n* Use the field name according to what you want to filter.\n* Use dot notation to filter by the field of the object.\n* Use dot notation with `*` to filter by the field on array of the object. (TODO)\n* Use dot notation with `0` to filter by the field on array of the object and also hide non-matching arrays in the results. (TODO)\n* You can use the following operators for filtering :\n\nOperator  | Description               | Example\n----------|---------------------------|-----------------------------\nnone      | Equal to (Exact matches)  | `/contacts?gender=male`\n`$eq`     | Same as above             | `/contacts?gender.$eq=male`\n`$ne`     | Not equal to              | `/contacts?phone.$ne=null`\n`$gt`     | Greater than              | `/contacts?age.$gt=18`\n`$gte`    | Greater than or equal     | `/contacts?age.$gte=21`\n`$lt`     | Less than                 | `/contacts?age.$lt=17`\n`$lte`    | Less than or equal        | `/contacts?age.$lte=15`\n`$like`   | Like                      | `/contacts?name.$like=john%`\n`$nlike`  | Not like                  | `/contacts?name.$nlike=john%`\n`$ilike`  | Case-insensitive Like     | `/contacts?name.$ilike=john%`\n`$nilike` | Case-insensitive Not Like | `/contacts?name.$nilike=john%`\n`$in`     | In                        | `/contacts?age.$in=17,21,34`\n`$nin`    | Not in                    | `/contacts?age.$nin=17,21,34`\n\n### Conditional filtering\n\nYou can use the `$or` query parameter with `|` delimiter for conditional filtering.\n\nThis is example if you want to filter contact data with condition `(gender = 'female' or age \u003c 10) and (is_salesman = '1' or is_employee = '1')` :\n```\nGET /contacts?$or=gender:female|age.$lt:10\u0026$or=is_salesman:true|is_employee:true\n```\n\n### Searching\n\nYou can use the `$search` query parameter for searching.\n\nThis is example if you want to search contact data with code or name contain character \"john\" (case-insensitive) :\n```\nGET /contacts?$search=code,name:john\n```\n\n### Comparing\n\nYou can use the `$field` key for comparing one field to another field in the same record.\n\nThis is example if you want to filter product data with qty_on_order greater than qty_available :\n```\nGET /products?qty_on_order.$gt=$field:qty_available\n```\n\n### Selection\n\nYou can use the `$select` query parameter to retrieve specific fields in the response.\n\n* Use the field name according to what you want to retrieve.\n* Use dot notation to retrieve the field of the object.\n* You can specify multiple fields separated by commas, for example : `GET /contacts?$select=id,code,name,classification.name`.\n* By default, array fields are hidden on get list api for performance reason, you can use `$nclude` query parameter to retrieve the specific array field, for example : `/contacts?$include=families,friends,phones`. Example to retrieve all array field : `/contacts?$include=all`\n* You can use the following operator for aggregation :\n\nOperator | Description | Example                    \n---------|-------------|----------------------------\n`$count` | count       | `/products?$select=$count:id`\n`$sum`   | sum         | `/products?$select=$sum:sold`\n`$min`   | minimum     | `/products?$select=$min:sold`\n`$max`   | maximum     | `/products?$select=$max:sold`\n`$avg`   | average     | `/products?$select=$avg:sold`\n\n### Grouping\n\nYou can use the `$group` query parameter to grouping.\n\nExample :\n```\n/products?$group=category.id\u0026$select=category.id,$sum:sold\u0026$sort:-$sum:sold\n```\n",
    "contact": {
      "name": ""
    },
    "license": {
      "name": ""
    },
    "version": "2025.09.242223"
  },
  "servers": [
    {
      "description": "local",
      "url": "http://localhost:8080"
    }
  ],
  "paths": {
    "/api/v1/assets": {
      "post": {
        "description": "Use this method to create Asset",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Asset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Asset",
        "tags": [
          "Asset"
        ]
      },
      "get": {
        "description": "Use this method to get list of Asset",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AssetList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Asset",
        "tags": [
          "Asset"
        ]
      }
    },
    "/api/v1/assets/{id}": {
      "get": {
        "description": "Use this method to get Asset by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Asset By ID",
        "tags": [
          "Asset"
        ]
      },
      "put": {
        "description": "Use this method to update Asset by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Asset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Asset By ID",
        "tags": [
          "Asset"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Asset by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Asset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Asset By ID",
        "tags": [
          "Asset"
        ]
      },
      "delete": {
        "description": "Use this method to delete Asset by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Asset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Asset"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Asset By ID",
        "tags": [
          "Asset"
        ]
      }
    },
    "/api/v1/assets/{id}/depreciations": {
      "get": {
        "description": "Use this method to get List depreciation of asset by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Depreciations Asset By ID",
        "tags": [
          "Asset Depreciation"
        ]
      }
    },
    "/api/v1/attachments": {
      "post": {
        "description": "Use this method to create Attachment",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attachment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Attachment",
        "tags": [
          "Attachment"
        ]
      },
      "get": {
        "description": "Use this method to get list of Attachment",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Attachment",
        "tags": [
          "Attachment"
        ]
      }
    },
    "/api/v1/attachments/{id}": {
      "get": {
        "description": "Use this method to get Attachment by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Attachment By ID",
        "tags": [
          "Attachment"
        ]
      },
      "delete": {
        "description": "Use this method to delete Attachment by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attachment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Attachment"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Attachment By ID",
        "tags": [
          "Attachment"
        ]
      }
    },
    "/api/v1/branches": {
      "post": {
        "description": "Use this method to create Branch",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Branch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Branch",
        "tags": [
          "Branch"
        ]
      },
      "get": {
        "description": "Use this method to get list of Branch",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BranchList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Branch",
        "tags": [
          "Branch"
        ]
      }
    },
    "/api/v1/branches/{id}": {
      "get": {
        "description": "Use this method to get Branch by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Branch By ID",
        "tags": [
          "Branch"
        ]
      },
      "put": {
        "description": "Use this method to update Branch by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Branch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Branch By ID",
        "tags": [
          "Branch"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Branch by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Branch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Branch By ID",
        "tags": [
          "Branch"
        ]
      },
      "delete": {
        "description": "Use this method to delete Branch by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Branch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Branch"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Branch By ID",
        "tags": [
          "Branch"
        ]
      }
    },
    "/api/v1/categories": {
      "post": {
        "description": "Use this method to create Category",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Category",
        "tags": [
          "Category"
        ]
      },
      "get": {
        "description": "Use this method to get list of Category",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Category",
        "tags": [
          "Category"
        ]
      }
    },
    "/api/v1/categories/{id}": {
      "get": {
        "description": "Use this method to get Category by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Category By ID",
        "tags": [
          "Category"
        ]
      },
      "put": {
        "description": "Use this method to update Category by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Category By ID",
        "tags": [
          "Category"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Category by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Category By ID",
        "tags": [
          "Category"
        ]
      },
      "delete": {
        "description": "Use this method to delete Category by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Category By ID",
        "tags": [
          "Category"
        ]
      }
    },
    "/api/v1/conditions": {
      "post": {
        "description": "Use this method to create Condition",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Condition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Condition"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Condition",
        "tags": [
          "Condition"
        ]
      },
      "get": {
        "description": "Use this method to get list of Condition",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConditionList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Condition",
        "tags": [
          "Condition"
        ]
      }
    },
    "/api/v1/conditions/{id}": {
      "get": {
        "description": "Use this method to get Condition by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Condition"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Condition By ID",
        "tags": [
          "Condition"
        ]
      },
      "put": {
        "description": "Use this method to update Condition by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Condition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Condition"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Condition By ID",
        "tags": [
          "Condition"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Condition by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Condition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Condition"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Condition By ID",
        "tags": [
          "Condition"
        ]
      },
      "delete": {
        "description": "Use this method to delete Condition by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Condition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Condition"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Condition By ID",
        "tags": [
          "Condition"
        ]
      }
    },
    "/api/v1/departments": {
      "post": {
        "description": "Use this method to create Department",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Department"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Department",
        "tags": [
          "Department"
        ]
      },
      "get": {
        "description": "Use this method to get list of Department",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DepartmentList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Department",
        "tags": [
          "Department"
        ]
      }
    },
    "/api/v1/departments/{id}": {
      "get": {
        "description": "Use this method to get Department by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Department By ID",
        "tags": [
          "Department"
        ]
      },
      "put": {
        "description": "Use this method to update Department by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Department"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Department By ID",
        "tags": [
          "Department"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Department by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Department"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Department By ID",
        "tags": [
          "Department"
        ]
      },
      "delete": {
        "description": "Use this method to delete Department by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Department"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Department By ID",
        "tags": [
          "Department"
        ]
      }
    },
    "/api/v1/employee_assets": {
      "post": {
        "description": "Use this method to create EmployeeAsset",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeAsset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeAsset"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create EmployeeAsset",
        "tags": [
          "EmployeeAsset"
        ]
      },
      "get": {
        "description": "Use this method to get list of EmployeeAsset",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeAssetList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get EmployeeAsset",
        "tags": [
          "EmployeeAsset"
        ]
      }
    },
    "/api/v1/employee_assets/{id}": {
      "get": {
        "description": "Use this method to get EmployeeAsset by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeAsset"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get EmployeeAsset By ID",
        "tags": [
          "EmployeeAsset"
        ]
      },
      "put": {
        "description": "Use this method to update EmployeeAsset by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeAsset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeAsset"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update EmployeeAsset By ID",
        "tags": [
          "EmployeeAsset"
        ]
      },
      "patch": {
        "description": "Use this method to partially update EmployeeAsset by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeAsset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeAsset"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update EmployeeAsset By ID",
        "tags": [
          "EmployeeAsset"
        ]
      },
      "delete": {
        "description": "Use this method to delete EmployeeAsset by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EmployeeAsset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeAsset"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete EmployeeAsset By ID",
        "tags": [
          "EmployeeAsset"
        ]
      }
    },
    "/api/v1/employees": {
      "post": {
        "description": "Use this method to create Employee",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create Employee",
        "tags": [
          "Employee"
        ]
      },
      "get": {
        "description": "Use this method to get list of Employee",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EmployeeList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Employee",
        "tags": [
          "Employee"
        ]
      }
    },
    "/api/v1/employees/{id}": {
      "get": {
        "description": "Use this method to get Employee by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Employee By ID",
        "tags": [
          "Employee"
        ]
      },
      "put": {
        "description": "Use this method to update Employee by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update Employee By ID",
        "tags": [
          "Employee"
        ]
      },
      "patch": {
        "description": "Use this method to partially update Employee by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update Employee By ID",
        "tags": [
          "Employee"
        ]
      },
      "delete": {
        "description": "Use this method to delete Employee by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Employee"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Employee"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete Employee By ID",
        "tags": [
          "Employee"
        ]
      }
    },
    "/api/v1/job_positions": {
      "post": {
        "description": "Use this method to create JobPosition",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPosition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPosition"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Create JobPosition",
        "tags": [
          "JobPosition"
        ]
      },
      "get": {
        "description": "Use this method to get list of JobPosition",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPositionList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get JobPosition",
        "tags": [
          "JobPosition"
        ]
      }
    },
    "/api/v1/job_positions/{id}": {
      "get": {
        "description": "Use this method to get JobPosition by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPosition"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get JobPosition By ID",
        "tags": [
          "JobPosition"
        ]
      },
      "put": {
        "description": "Use this method to update JobPosition by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPosition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPosition"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Update JobPosition By ID",
        "tags": [
          "JobPosition"
        ]
      },
      "patch": {
        "description": "Use this method to partially update JobPosition by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPosition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPosition"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Partially Update JobPosition By ID",
        "tags": [
          "JobPosition"
        ]
      },
      "delete": {
        "description": "Use this method to delete JobPosition by id",
        "parameters": [
          {
            "$ref": "#/components/parameters/pathParam.ID"
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/JobPosition"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobPosition"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Delete JobPosition By ID",
        "tags": [
          "JobPosition"
        ]
      }
    },
    "/api/v1/me": {
      "get": {
        "description": "Get current logged in user profile",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Success"
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          }
        },
        "summary": "Get Profile",
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/me/login": {
      "post": {
        "description": "Login with email and password",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {}
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Login User",
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/me/register": {
      "post": {
        "description": "Register a new user",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "requestBody": {
          "content": {}
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Register User",
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/reports/asset_conditions": {
      "get": {
        "description": "Use this method to get Report Asset Condition",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/AssetConditionList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Report Asset Condition",
        "tags": [
          "AssetCondition"
        ]
      }
    },
    "/api/v1/reports/distribution_assets_per_departments": {
      "get": {
        "description": "Use this method to get Report Distribution Asset Per Department",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "text/html": {
                "schema": {
                  "$ref": "#/components/schemas/DistributionAssetsPerDepartmentList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get DistributionAssetsPerDepartment",
        "tags": [
          "DistributionAssetsPerDepartment"
        ]
      }
    },
    "/api/v1/users": {
      "get": {
        "description": "Use this method to get list of Users",
        "parameters": [
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          },
          {
            "$ref": "#/components/parameters/queryParam.Any"
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserList"
                }
              }
            },
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "summary": "Get Users",
        "tags": [
          "User"
        ]
      }
    },
    "/api/v1/users/:id": {
      "delete": {
        "description": "Delete a specific user record by its ID.",
        "parameters": [
          {
            "description": "UUID of the user to delete",
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/headerParam.Accept-Language"
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.BadRequest"
                }
              }
            },
            "description": "A validation exception has occurred."
          },
          "401": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Unauthorized"
                }
              }
            },
            "description": "Invalid authorization credentials."
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error.Forbidden"
                }
              }
            },
            "description": "User doesn't have permission to access the resource."
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ],
        "summary": "Delete User by ID",
        "tags": [
          "User"
        ]
      }
    }
  },
  "components": {
    "parameters": {
      "headerParam.Accept-Language": {
        "in": "header",
        "name": "Accept-Language",
        "schema": {
          "default": "en-US",
          "enum": [
            "en-US",
            "en",
            "id-ID",
            "id"
          ],
          "type": "string"
        }
      },
      "pathParam.ID": {
        "description": "An ID of the resources",
        "in": "path",
        "name": "id",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "queryParam.Any": {
        "explode": true,
        "in": "query",
        "name": "params",
        "schema": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      }
    },
    "schemas": {
      "Asset": {
        "properties": {
          "assign_date": {
            "format": "date",
            "type": "string"
          },
          "attachment": {
            "properties": {
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "branch": {
            "properties": {
              "address": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "category": {
            "properties": {
              "code": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "economic_age": {
                "type": "integer"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "code": {
            "type": "string"
          },
          "condition": {
            "properties": {
              "code": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "current": {
            "properties": {
              "amount": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "department": {
            "properties": {
              "code": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "depreciation": {
            "properties": {
              "amount": {
                "type": "number"
              },
              "per_month": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "employee": {
            "properties": {
              "address": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "is_active": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "input_date": {
            "format": "date",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "price": {
            "type": "number"
          },
          "salvage": {
            "properties": {
              "amount": {
                "type": "number"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssetConditionList": {
        "properties": {
          "message": {
            "type": "string"
          },
          "results": {
            "properties": {
              "list": {
                "items": {
                  "properties": {
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "pagination": {
                "properties": {
                  "links": {
                    "properties": {
                      "first": {
                        "type": "string"
                      },
                      "last": {
                        "type": "string"
                      },
                      "next": {
                        "type": "string"
                      },
                      "previous": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "page": {
                    "type": "integer"
                  },
                  "per_page": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "total_pages": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AssetList": {
        "properties": {
          "message": {
            "type": "string"
          },
          "results": {
            "properties": {
              "list": {
                "items": {
                  "properties": {
                    "assign_date": {
                      "format": "date",
                      "type": "string"
                    },
                    "attachment": {
                      "properties": {
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "path": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "branch": {
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "category": {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "economic_age": {
                          "type": "integer"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "code": {
                      "type": "string"
                    },
                    "condition": {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "current": {
                      "properties": {
                        "amount": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "department": {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "depreciation": {
                      "properties": {
                        "amount": {
                          "type": "number"
                        },
                        "per_month": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "employee": {
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "is_active": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "input_date": {
                      "format": "date",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "salvage": {
                      "properties": {
                        "amount": {
                          "type": "number"
                        }
                      },
                      "type": "object"
                    },
                    "status": {
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "pagination": {
                "properties": {
                  "links": {
                    "properties": {
                      "first": {
                        "type": "string"
                      },
                      "last": {
                        "type": "string"
                      },
                      "next": {
                        "type": "string"
                      },
                      "previous": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "page": {
                    "type": "integer"
                  },
                  "per_page": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "total_pages": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Attachment": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "data_id": {
            "format": "uuid",
            "type": "string"
          },
          "endpoint": {
            "type": "string"
          },
          "extension": {
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "path": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "AttachmentList": {
        "properties": {
          "message": {
            "type": "string"
          },
          "results": {
            "properties": {
              "list": {
                "items": {
                  "properties": {
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "data_id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "endpoint": {
                      "type": "string"
                    },
                    "extension": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "path": {
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "pagination": {
                "properties": {
                  "links": {
                    "properties": {
                      "first": {
                        "type": "string"
                      },
                      "last": {
                        "type": "string"
                      },
                      "next": {
                        "type": "string"
                      },
                      "previous": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "page": {
                    "type": "integer"
                  },
                  "per_page": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "total_pages": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Branch": {
        "properties": {
          "address": {
            "type": "string"
          },
          "code": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "BranchList": {
        "properties": {
          "message": {
            "type": "string"
          },
          "results": {
            "properties": {
              "list": {
                "items": {
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "code": {
                      "type": "string"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "is_active": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "pagination": {
                "properties": {
                  "links": {
                    "properties": {
                      "first": {
                        "type": "string"
                      },
                      "last": {
                        "type": "string"
                      },
                      "next": {
                        "type": "string"
                      },
                      "previous": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "page": {
                    "type": "integer"
                  },
                  "per_page": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "total_pages": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Category": {
        "properties": {
          "code": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "economic_age": {
            "type": "integer"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "CategoryList": {
        "properties": {
          "message": {
            "type": "string"
          },
          "results": {
            "properties": {
              "list": {
                "items": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "economic_age": {
                      "type": "integer"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "is_active": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "pagination": {
                "properties": {
                  "links": {
                    "properties": {
                      "first": {
                        "type": "string"
                      },
                      "last": {
                        "type": "string"
                      },
                      "next": {
                        "type": "string"
                      },
                      "previous": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "page": {
                    "type": "integer"
                  },
                  "per_page": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "total_pages": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Condition": {
        "properties": {
          "code": {
            "type": "string"
          },
          "color": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "ConditionList": {
        "properties": {
          "message": {
            "type": "string"
          },
          "results": {
            "properties": {
              "list": {
                "items": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "color": {
                      "type": "string"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "is_active": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "pagination": {
                "properties": {
                  "links": {
                    "properties": {
                      "first": {
                        "type": "string"
                      },
                      "last": {
                        "type": "string"
                      },
                      "next": {
                        "type": "string"
                      },
                      "previous": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "page": {
                    "type": "integer"
                  },
                  "per_page": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "total_pages": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Department": {
        "properties": {
          "code": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "DepartmentList": {
        "properties": {
          "message": {
            "type": "string"
          },
          "results": {
            "properties": {
              "list": {
                "items": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "is_active": {
                      "type": "boolean"
                    },
                    "name": {
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "pagination": {
                "properties": {
                  "links": {
                    "properties": {
                      "first": {
                        "type": "string"
                      },
                      "last": {
                        "type": "string"
                      },
                      "next": {
                        "type": "string"
                      },
                      "previous": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "page": {
                    "type": "integer"
                  },
                  "per_page": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "total_pages": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "DistributionAssetsPerDepartmentList": {
        "properties": {
          "message": {
            "type": "string"
          },
          "results": {
            "properties": {
              "list": {
                "items": {
                  "properties": {
                    "branch": {
                      "properties": {
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "category": {
                      "properties": {
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "department": {
                      "properties": {
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "total_asset": {
                      "type": "integer"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "pagination": {
                "properties": {
                  "links": {
                    "properties": {
                      "first": {
                        "type": "string"
                      },
                      "last": {
                        "type": "string"
                      },
                      "next": {
                        "type": "string"
                      },
                      "previous": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "page": {
                    "type": "integer"
                  },
                  "per_page": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "total_pages": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Employee": {
        "properties": {
          "address": {
            "type": "string"
          },
          "attachment": {
            "properties": {
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "branch": {
            "properties": {
              "address": {
                "type": "string"
              },
              "code": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "code": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "department": {
            "properties": {
              "code": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "email": {
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "job_position": {
            "properties": {
              "code": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EmployeeAsset": {
        "properties": {
          "asset": {
            "properties": {
              "attachment": {
                "name": {
                  "type": "string"
                },
                "properties": {
                  "url": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "category": {
                "description": {
                  "type": "string"
                },
                "properties": {
                  "code": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "code": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "price": {
                "type": "number"
              },
              "status": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "assign_date": {
            "format": "date",
            "type": "string"
          },
          "attachment": {
            "properties": {
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "path": {
                "type": "string"
              },
              "url": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "condition": {
            "properties": {
              "code": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "date": {
            "format": "date",
            "type": "string"
          },
          "employee": {
            "properties": {
              "address": {
                "type": "string"
              },
              "attachment": {
                "properties": {
                  "path": {
                    "type": "string"
                  }
                },
                "type": "object",
                "url": {
                  "type": "string"
                }
              },
              "branch": {
                "id": {
                  "format": "uuid",
                  "type": "string"
                },
                "properties": {
                  "address": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "code": {
                "type": "string"
              },
              "department": {
                "description": {
                  "type": "string"
                },
                "properties": {
                  "code": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "email": {
                "type": "string"
              },
              "id": {
                "format": "uuid",
                "type": "string"
              },
              "is_active": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "EmployeeAssetList": {
        "properties": {
          "message": {
            "type": "string"
          },
          "results": {
            "properties": {
              "list": {
                "items": {
                  "properties": {
                    "asset": {
                      "properties": {
                        "attachment": {
                          "path": {
                            "type": "string"
                          },
                          "properties": {
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "category": {
                          "code": {
                            "type": "string"
                          },
                          "properties": {
                            "description": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "code": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "status": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "assign_date": {
                      "format": "date",
                      "type": "string"
                    },
                    "attachment": {
                      "properties": {
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "path": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "condition": {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "date": {
                      "format": "date",
                      "type": "string"
                    },
                    "employee": {
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "attachment": {
                          "id": {
                            "format": "uuid",
                            "type": "string"
                          },
                          "properties": {
                            "path": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "branch": {
                          "name": {
                            "type": "string"
                          },
                          "properties": {
                            "id": {
                              "format": "uuid",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "code": {
                          "type": "string"
                        },
                        "department": {
                          "name": {
                            "type": "string"
                          },
                          "properties": {
                            "description": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "email": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "is_active": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "pagination": {
                "properties": {
                  "links": {
                    "properties": {
                      "first": {
                        "type": "string"
                      },
                      "last": {
                        "type": "string"
                      },
                      "next": {
                        "type": "string"
                      },
                      "previous": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "page": {
                    "type": "integer"
                  },
                  "per_page": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "total_pages": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "EmployeeList": {
        "properties": {
          "message": {
            "type": "string"
          },
          "results": {
            "properties": {
              "list": {
                "items": {
                  "properties": {
                    "address": {
                      "type": "string"
                    },
                    "attachment": {
                      "properties": {
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "path": {
                          "type": "string"
                        },
                        "url": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "branch": {
                      "properties": {
                        "address": {
                          "type": "string"
                        },
                        "code": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "code": {
                      "type": "string"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "department": {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "email": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "is_active": {
                      "type": "boolean"
                    },
                    "job_position": {
                      "properties": {
                        "code": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "id": {
                          "format": "uuid",
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "name": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "pagination": {
                "properties": {
                  "links": {
                    "properties": {
                      "first": {
                        "type": "string"
                      },
                      "last": {
                        "type": "string"
                      },
                      "next": {
                        "type": "string"
                      },
                      "previous": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "page": {
                    "type": "integer"
                  },
                  "per_page": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "total_pages": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "Error.BadRequest": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "example": 400,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "example": "The request cannot be performed because of malformed or missing parameters.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Error.Forbidden": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "example": 403,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "example": "The user does not have permission to access the resource.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "Error.Unauthorized": {
        "properties": {
          "error": {
            "properties": {
              "code": {
                "example": 401,
                "format": "int32",
                "type": "integer"
              },
              "message": {
                "example": "Invalid authentication token.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "JobPosition": {
        "properties": {
          "code": {
            "type": "string"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "JobPositionList": {
        "properties": {
          "message": {
            "type": "string"
          },
          "results": {
            "properties": {
              "list": {
                "items": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "pagination": {
                "properties": {
                  "links": {
                    "properties": {
                      "first": {
                        "type": "string"
                      },
                      "last": {
                        "type": "string"
                      },
                      "next": {
                        "type": "string"
                      },
                      "previous": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "page": {
                    "type": "integer"
                  },
                  "per_page": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "total_pages": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "User": {
        "properties": {
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "deleted_at": {
            "format": "date-time",
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "full_name": {
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "is_active": {
            "type": "boolean"
          },
          "phone": {
            "type": "string"
          },
          "updated_at": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      },
      "UserList": {
        "properties": {
          "message": {
            "type": "string"
          },
          "results": {
            "properties": {
              "list": {
                "items": {
                  "properties": {
                    "created_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "deleted_at": {
                      "format": "date-time",
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "full_name": {
                      "type": "string"
                    },
                    "id": {
                      "format": "uuid",
                      "type": "string"
                    },
                    "is_active": {
                      "type": "boolean"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "updated_at": {
                      "format": "date-time",
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "pagination": {
                "properties": {
                  "links": {
                    "properties": {
                      "first": {
                        "type": "string"
                      },
                      "last": {
                        "type": "string"
                      },
                      "next": {
                        "type": "string"
                      },
                      "previous": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "page": {
                    "type": "integer"
                  },
                  "per_page": {
                    "type": "integer"
                  },
                  "total": {
                    "type": "integer"
                  },
                  "total_pages": {
                    "type": "integer"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "bearerTokenAuth": {
        "scheme": "bearer",
        "type": "http"
      }
    }
  },
  "security": [
    {
      "bearerTokenAuth": []
    }
  ],
  "tags": [
    {
      "name": "User"
    },
    {
      "name": "Department"
    },
    {
      "name": "Condition"
    },
    {
      "name": "Category"
    },
    {
      "name": "Branch"
    },
    {
      "name": "Employee"
    },
    {
      "name": "Asset"
    },
    {
      "name": "Asset Depreciation"
    },
    {
      "name": "Attachment"
    },
    {
      "name": "EmployeeAsset"
    },
    {
      "name": "JobPosition"
    },
    {
      "name": "DistributionAssetsPerDepartment"
    },
    {
      "name": "AssetCondition"
    }
  ],
  "externalDocs": {
    "url": ""
  }
}